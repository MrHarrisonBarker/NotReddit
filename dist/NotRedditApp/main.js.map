{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-post/add-post.component.css","webpack:///./src/app/add-post/add-post.component.html","webpack:///./src/app/add-post/add-post.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"addForm\\\">\\n  <label>\\n    Title :\\n    <input type=\\\"text\\\" formControlName=\\\"postTitle\\\">\\n  </label>\\n\\n  <label>\\n    Body :\\n    <input type=\\\"text\\\" formControlName=\\\"postBody\\\">\\n  </label>\\n</form>\\n\\n<h1>\\n  Hellow?\\n</h1>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Post} from \"../post\";\nimport {PostService} from \"../post.service\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n\n  addForm = new FormGroup({\n    postTitle: new FormControl(''),\n    postBody: new FormControl(''),\n    Author: new FormControl(''),\n    Visible: new FormControl(''),\n    Domain: new FormControl(''),\n  });\n\n  constructor(private postService: PostService) { }\n\n  ngOnInit() {\n  }\n\n  addPost(post: Post) {\n    this.postService.addPost(post)\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PostComponent} from './post/post.component';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from \"./home/home.component\";\nimport {AddPostComponent} from \"./add-post/add-post.component\";\n\nconst routes: Routes = [\n  {path: 'posts', component: PostComponent},\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'add', component: AddPostComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule, ErrorHandler, Injectable} from '@angular/core';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport {AppRoutingModule} from './app-routing.module';\nimport * as Sentry from '@sentry/browser';\n\nimport {PostComponent} from './post/post.component';\nimport {AppComponent} from './app.component';\nimport {AngularFireModule} from '@angular/fire';\nimport {LoginComponent} from './login/login.component';\nimport {UsersComponent} from './users/users.component';\nimport {environment} from '../environments/environment';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport {AuthService} from \"./auth.service\";\nimport { HomeComponent } from './home/home.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\nSentry.init({\n  dsn: 'https://659bc1284650420a9eb01385b478bd16@sentry.io/1289869'\n});\n\n@Injectable()\nclass SentryErrorHandler implements ErrorHandler {\n  constructor() {\n  }\n\n  handleError(error) {\n    Sentry.captureException(error.originalError || error);\n    throw error;\n  }\n}\n\n@NgModule({\n  declarations: [AppComponent, PostComponent, LoginComponent, UsersComponent, HomeComponent, AddPostComponent ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase, 'angular-auth-firebase'),\n    AngularFireAuthModule,\n    ReactiveFormsModule],\n  providers: [{provide: ErrorHandler, useClass: SentryErrorHandler}, AuthService ],\n  bootstrap: [ AppComponent ]\n})\n\nexport class AppModule {\n}\n\n\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {Router} from \"@angular/router\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport * as firebase from \"firebase\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private user: Observable<firebase.User>;\n\n  constructor(private _firebaseAuth: AngularFireAuth, private router: Router ) {\n    this.user = _firebaseAuth.authState;\n  }\n\n  signInWIthGoogle() {\n    return this._firebaseAuth.auth.signInWithPopup(\n      new firebase.auth.GoogleAuthProvider()\n    );\n  }\n\n  signInWithGitHub() {\n    return this._firebaseAuth.auth.signInWithPopup(\n      new firebase.auth.GithubAuthProvider()\n    );\n  }\n}\n","module.exports = \"\\n.post {\\n  background-color: lightgreen;\\n}\\n.voteBtn {\\n  width: 40px;\\n  height: 40px;\\n}\\n\\n\"","module.exports = \"<h1 class=\\\"h1 font-weight-normal\\\">Home</h1>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div *ngFor=\\\"let post of posts\\\" class=\\\"row\\\">\\n    <div class=\\\"col-1\\\">\\n      <img src=\\\"../../assets/upVote.svg\\\"\\n           class=\\\"img-fluid voteBtn mx-auto d-block\\\"\\n           alt=\\\"Responsive image\\\"\\n           (click)=\\\"updateRank(post,true)\\\">\\n      <h1 class=\\\"text-center\\\">{{ post.Rank }}</h1>\\n      <img src=\\\"../../assets/downVote.svg\\\"\\n           class=\\\"img-fluid voteBtn mx-auto d-block\\\"\\n           alt=\\\"Responsive image\\\"\\n           (click)=\\\"updateRank(post,false)\\\">\\n    </div>\\n    <div class=\\\"col-11 post\\\">\\n      <h3>{{ post.postTitle }}</h3>\\n      <p><em>Uploaded to: {{ post.Domain }}</em></p>\\n      <p>{{ post.Summary }}</p>\\n      <p>{{ post.Author }}</p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-1\\\" style=\\\"background-color: red; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: blue; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: green; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: red; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: blue; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: green; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: red; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: blue; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: green; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: red; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: blue; height: 100px \\\"></div>\\n    <div class=\\\"col-1\\\" style=\\\"background-color: green; height: 100px \\\"></div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PostService} from '../post.service';\nimport {Observable} from 'rxjs';\nimport {Post} from '../post';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  posts: Post[];\n\n  constructor(private postService: PostService) { }\n\n  ngOnInit() {\n    this.getAllPosts();\n  }\n\n  getAllPosts() {\n    this.postService.getAllPosts().subscribe(posts => this.posts = posts);\n  }\n\n  updateRank(post: Post, up: boolean) {\n    if (up) {\n      post.Rank ++;\n    } else {\n      post.Rank --;\n    }\n    this.postService.updatePost(post);\n  }\n}\n","module.exports = \"html,\\nbody {\\n  height: 100%;\\n}\\n\\nbody {\\n  display: flex;\\n  align-items: center;\\n  padding-top: 40px;\\n  padding-bottom: 40px;\\n  background-color: #f5f5f5;\\n}\\n\\n.form-signin {\\n  width: 100%;\\n  max-width: 330px;\\n  padding: 15px;\\n  margin: auto;\\n}\\n\"","module.exports = \"<div class=\\\"text-center\\\">\\n  <form class=\\\"form-signin\\\">\\n    <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Sign in</h1>\\n    <button class=\\\"btn btn-block btn-danger\\\" (click)=\\\"signInWithGoogle()\\\">Click to login with google</button>\\n    <button class=\\\"btn btn-block btn-dark\\\" (click)=\\\"signInWithGitHub()\\\">Click to login with github</button>\\n  </form>\\n</div>\\n\"","import {Component, OnInit, HostBinding, NgZone} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private  user: Observable<firebase.User>;\n\n  constructor(public fireAuth: AngularFireAuth,\n              public authService: AuthService,\n              private router: Router) {\n    this.user = fireAuth.authState;\n  }\n\n  ngOnInit() {\n\n  }\n\n  signInWithGoogle() {\n    this.authService.signInWIthGoogle().then((data) => {\n      this.router.navigate(['/home']);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  signInWithGitHub() {\n    this.authService.signInWithGitHub().then( (data) => {\n      this.router.navigate(['/home']);\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n}\n","import  {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\nimport {Post} from './post';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostService {\n\n  constructor(private client: HttpClient) {\n  }\n\n  httpUrl = 'https://not-reddit-api.herokuapp.com/posts';\n\n  getAllPosts(): Observable<Post[]> {\n    return this.client.get<Post[]>(this.httpUrl, httpOptions);\n  }\n\n  getPost(id): Observable<Post> {\n    return this.client.get<Post>(`${this.httpUrl}/:${id}`, httpOptions);\n  }\n\n  addPost(post: Post) {\n    this.client.post<Post>(this.httpUrl, post, httpOptions)\n      .subscribe(\n        res => {\n          console.log(res);\n        },\n        err => {\n          console.log('Error occured');\n        });\n  }\n\n  deletePost(post: Post) {\n    const url = `${this.httpUrl}/:${post._id}`;\n    this.client.delete(url, httpOptions)\n      .subscribe(\n        res => {\n          console.log(res);\n        },\n        err => {\n          console.log( 'Error occured' + err );\n        });\n  }\n\n  updatePost(post: Post) {\n    const url = `${this.httpUrl}/${post._id}`;\n    this.client.put<Post>(url, post, httpOptions)\n      .subscribe(\n        res => {\n          console.log(res);\n        },\n        err => {\n          console.log( 'Error occured' + err );\n        });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"\\\">\\n  <p>id : {{ post._id }}</p>\\n  <p>Author : {{ post.Author }}</p>\\n  <p>Domain : {{ post.Domain }}</p>\\n  <p>Title : {{ post.postTitle }}</p>\\n  <p>Body : {{ post.postBody }}</p>\\n  <p>Rank : {{ post.Rank }}</p>\\n  <p>Summary : {{ post.Summary }}</p>\\n  <p>Visible? : {{ post.Visible }}</p>\\n  <p>Comments : {{ post.Comments | json }}</p>\\n  <hr>\\n</div>\\n\"","import { Component, OnInit , Input } from '@angular/core';\nimport { PostService } from '../post.service';\n\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  constructor(private postService: PostService) { }\n\n  @Input() id: String;\n  selectedPost: Post;\n\n  ngOnInit() {\n\n  }\n\n  getPost(id) {\n    this.postService.getPost(id)\n      .subscribe( data => this.selectedPost = data ,\n        error => console.log(error));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  users works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyDwWRgthvyzD-pDGlJcjmODA2xexLZSYIk',\n    authDomain: 'notreddit-7c47f.firebaseapp.com',\n    databaseURL: 'https://notreddit-7c47f.firebaseio.com',\n    projectId: 'notreddit-7c47f',\n    storageBucket: 'notreddit-7c47f.appspot.com',\n    messagingSenderId: '512540619579'}\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}